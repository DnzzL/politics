//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Stance = newStanceTable("", "stance", "")

type stanceTable struct {
	sqlite.Table

	// Columns
	ID      sqlite.ColumnInteger
	QueryID sqlite.ColumnInteger
	PartyID sqlite.ColumnInteger
	Text    sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type StanceTable struct {
	stanceTable

	EXCLUDED stanceTable
}

// AS creates new StanceTable with assigned alias
func (a StanceTable) AS(alias string) *StanceTable {
	return newStanceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StanceTable with assigned schema name
func (a StanceTable) FromSchema(schemaName string) *StanceTable {
	return newStanceTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new StanceTable with assigned table prefix
func (a StanceTable) WithPrefix(prefix string) *StanceTable {
	return newStanceTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new StanceTable with assigned table suffix
func (a StanceTable) WithSuffix(suffix string) *StanceTable {
	return newStanceTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newStanceTable(schemaName, tableName, alias string) *StanceTable {
	return &StanceTable{
		stanceTable: newStanceTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newStanceTableImpl("", "excluded", ""),
	}
}

func newStanceTableImpl(schemaName, tableName, alias string) stanceTable {
	var (
		IDColumn       = sqlite.IntegerColumn("id")
		QueryIDColumn  = sqlite.IntegerColumn("query_id")
		PartyIDColumn  = sqlite.IntegerColumn("party_id")
		TextColumn     = sqlite.StringColumn("text")
		allColumns     = sqlite.ColumnList{IDColumn, QueryIDColumn, PartyIDColumn, TextColumn}
		mutableColumns = sqlite.ColumnList{QueryIDColumn, PartyIDColumn, TextColumn}
	)

	return stanceTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		QueryID: QueryIDColumn,
		PartyID: PartyIDColumn,
		Text:    TextColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
